//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IADLX3DSettingsServices : IADLXInterface {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal IADLX3DSettingsServices(global::System.IntPtr cPtr, bool cMemoryOwn) : base(ADLXPINVOKE.IADLX3DSettingsServices_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IADLX3DSettingsServices obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(IADLX3DSettingsServices obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ADLXPINVOKE.delete_IADLX3DSettingsServices(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public new static SWIGTYPE_p_wchar_t IID() {
    global::System.IntPtr cPtr = ADLXPINVOKE.IADLX3DSettingsServices_IID();
    SWIGTYPE_p_wchar_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_wchar_t(cPtr, false);
    return ret;
  }

  public virtual ADLX_RESULT GetAntiLag(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLX3DAntiLag pp3DAntiLag) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLX3DSettingsServices_GetAntiLag(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLX3DAntiLag.getCPtr(pp3DAntiLag));
    return ret;
  }

  public virtual ADLX_RESULT GetChill(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLX3DChill pp3DChill) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLX3DSettingsServices_GetChill(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLX3DChill.getCPtr(pp3DChill));
    return ret;
  }

  public virtual ADLX_RESULT GetBoost(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLX3DBoost pp3DBoost) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLX3DSettingsServices_GetBoost(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLX3DBoost.getCPtr(pp3DBoost));
    return ret;
  }

  public virtual ADLX_RESULT GetImageSharpening(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLX3DImageSharpening pp3DImageSharpening) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLX3DSettingsServices_GetImageSharpening(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLX3DImageSharpening.getCPtr(pp3DImageSharpening));
    return ret;
  }

  public virtual ADLX_RESULT GetEnhancedSync(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLX3DEnhancedSync pp3DEnhancedSync) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLX3DSettingsServices_GetEnhancedSync(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLX3DEnhancedSync.getCPtr(pp3DEnhancedSync));
    return ret;
  }

  public virtual ADLX_RESULT GetWaitForVerticalRefresh(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLX3DWaitForVerticalRefresh pp3DWaitForVerticalRefresh) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLX3DSettingsServices_GetWaitForVerticalRefresh(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLX3DWaitForVerticalRefresh.getCPtr(pp3DWaitForVerticalRefresh));
    return ret;
  }

  public virtual ADLX_RESULT GetFrameRateTargetControl(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLX3DFrameRateTargetControl pp3DFrameRateTargetControl) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLX3DSettingsServices_GetFrameRateTargetControl(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLX3DFrameRateTargetControl.getCPtr(pp3DFrameRateTargetControl));
    return ret;
  }

  public virtual ADLX_RESULT GetAntiAliasing(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLX3DAntiAliasing pp3DAntiAliasing) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLX3DSettingsServices_GetAntiAliasing(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLX3DAntiAliasing.getCPtr(pp3DAntiAliasing));
    return ret;
  }

  public virtual ADLX_RESULT GetMorphologicalAntiAliasing(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLX3DMorphologicalAntiAliasing pp3DMorphologicalAntiAliasing) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLX3DSettingsServices_GetMorphologicalAntiAliasing(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLX3DMorphologicalAntiAliasing.getCPtr(pp3DMorphologicalAntiAliasing));
    return ret;
  }

  public virtual ADLX_RESULT GetAnisotropicFiltering(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLX3DAnisotropicFiltering pp3DAnisotropicFiltering) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLX3DSettingsServices_GetAnisotropicFiltering(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLX3DAnisotropicFiltering.getCPtr(pp3DAnisotropicFiltering));
    return ret;
  }

  public virtual ADLX_RESULT GetTessellation(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLX3DTessellation pp3DTessellation) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLX3DSettingsServices_GetTessellation(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLX3DTessellation.getCPtr(pp3DTessellation));
    return ret;
  }

  public virtual ADLX_RESULT GetRadeonSuperResolution(SWIGTYPE_p_p_adlx__IADLX3DRadeonSuperResolution pp3DRadeonSuperResolution) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLX3DSettingsServices_GetRadeonSuperResolution(swigCPtr, SWIGTYPE_p_p_adlx__IADLX3DRadeonSuperResolution.getCPtr(pp3DRadeonSuperResolution));
    return ret;
  }

  public virtual ADLX_RESULT GetResetShaderCache(IADLXGPU pGPU, SWIGTYPE_p_p_adlx__IADLX3DResetShaderCache pp3DResetShaderCache) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLX3DSettingsServices_GetResetShaderCache(swigCPtr, IADLXGPU.getCPtr(pGPU), SWIGTYPE_p_p_adlx__IADLX3DResetShaderCache.getCPtr(pp3DResetShaderCache));
    return ret;
  }

  public virtual ADLX_RESULT Get3DSettingsChangedHandling(SWIGTYPE_p_p_adlx__IADLX3DSettingsChangedHandling pp3DSettingsChangedHandling) {
    ADLX_RESULT ret = (ADLX_RESULT)ADLXPINVOKE.IADLX3DSettingsServices_Get3DSettingsChangedHandling(swigCPtr, SWIGTYPE_p_p_adlx__IADLX3DSettingsChangedHandling.getCPtr(pp3DSettingsChangedHandling));
    return ret;
  }

}
